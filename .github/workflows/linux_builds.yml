name: linux

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            cc: gcc-10
          - os: ubuntu-20.04
            cc: clang-10
          - os: ubuntu-20.04
            cc: i686-w64-mingw32-gcc-9
          - os: ubuntu-18.04
            cc: gcc-8
          - os: ubuntu-18.04
            cc: clang-10
          - os: ubuntu-18.04
            cc: i686-w64-mingw32-gcc-7
          - os: ubuntu-16.04
            cc: gcc-5
          - os: ubuntu-16.04
            cc: clang-8
          - os: ubuntu-16.04
            cc: i686-w64-mingw32-gcc-5
    steps:
    - uses: actions/checkout@v1
    - name: Dependencies
      env:
        CC: ${{ matrix.cc }}
      run: |
        # ubuntu 16.04 does not package libcbor, use our ppa for that
        if [ "$(lsb_release --short --release)" = "16.04" ]; then
          sudo apt-add-repository ppa:yubico/stable
        fi
        sudo apt -q update
        sudo apt install -q -y libcbor-dev libudev-dev original-awk mandoc
        if [ "${CC%-*}" == "clang" ]; then
          sudo apt install -q -y ${CC%-*}-tools-${CC#clang-}
        elif [ "${CC%-*}" == "i686-w64-mingw32-gcc" ]; then
          sudo apt install -q -y binutils-mingw-w64-i686 gcc-mingw-w64 \
           g++-mingw-w64 mingw-w64-i686-dev
        else
          sudo apt install -q -y "${CC}"
        fi
    - name: Build
      env:
        CC: ${{ matrix.cc }}
      run: |
        /bin/sh -eux .actions/build-linux-${CC%-*}
